# docker-compose.yml - Updated with Veeva support
version: '3.8'

services:
  # COA Backend API with Veeva Integration
  coa-backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        TARGET: ${TARGET:-prod}
    container_name: coa-backend-api
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      # Application
      APP_NAME: "COA Document Processor API"
      APP_VERSION: "1.0.0"
      DEBUG: "${DEBUG:-False}"
      
      # Server Configuration
      HOST: "0.0.0.0"
      PORT: "8000"
      SSL_ENABLED: "${SSL_ENABLED:-False}"
      
      # Database Configuration
      DB_HOST: "${DB_HOST:-bg-beone-db-d-1.cijvcub5gps8.us-west-2.rds.amazonaws.com}"
      DB_PORT: "${DB_PORT:-5432}"
      DB_NAME: "${DB_NAME:-aimta}"
      DB_USER: "${DB_USER:-aimta_dev_owner}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_SCHEMA: "${DB_SCHEMA:-coa_processor}"
      
      # Azure OpenAI Configuration
      AZURE_OPENAI_API_KEY: "${AZURE_OPENAI_API_KEY}"
      AZURE_OPENAI_BASE_URL: "${AZURE_OPENAI_BASE_URL:-https://dsdi-openai-dev.openai.azure.com/}"
      AZURE_OPENAI_API_VERSION: "${AZURE_OPENAI_API_VERSION:-2025-01-01-preview}"
      AZURE_OPENAI_DEPLOYMENT_NAME: "${AZURE_OPENAI_DEPLOYMENT_NAME:-dsdi-gpt-4o}"
      
      # Veeva Vault Configuration
      VEEVA_VAULT_URL: "${VEEVA_VAULT_URL:-https://sb-beigene-rim.veevavault.com}"
      VEEVA_USERNAME: "${VEEVA_USERNAME:-zhijun.li@sb-beigene.com}"
      VEEVA_PASSWORD: "${VEEVA_PASSWORD}"  # Must be set via environment variable
      VEEVA_API_VERSION: "${VEEVA_API_VERSION:-v25.1}"
      VEEVA_API_TIMEOUT: "${VEEVA_API_TIMEOUT:-30}"
      VEEVA_MAX_CONCURRENT_DOWNLOADS: "${VEEVA_MAX_CONCURRENT_DOWNLOADS:-3}"
      VEEVA_DOWNLOAD_CHUNK_SIZE: "${VEEVA_DOWNLOAD_CHUNK_SIZE:-8192}"
      VEEVA_ENABLED: "${VEEVA_ENABLED:-True}"
      
      # Processing Configuration
      PROCESSING_MODE: "${PROCESSING_MODE:-hybrid}"
      MAX_MEMORY_PDF_SIZE: "${MAX_MEMORY_PDF_SIZE:-52428800}"
      ENABLE_CACHE: "${ENABLE_CACHE:-True}"
      CACHE_TTL: "${CACHE_TTL:-3600}"
      
      # OpenAI (fallback)
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      
      # Security
      SECRET_KEY: "${SECRET_KEY:-your-secret-key-here-change-in-production}"
      ALGORITHM: "HS256"
      ACCESS_TOKEN_EXPIRE_MINUTES: "30"
      
      # CORS Origins
      CORS_ORIGINS: '["https://beone-d.beigenecorp.net", "https://localhost:3000", "https://localhost:8000"]'
      
    volumes:
      # 持久化文件存储
      - coa_uploads:/app/uploads
      - coa_logs:/app/logs
      # 如果需要 SSL 证书
      - ${SSL_CERT_PATH:-./certs}:/app/certs:ro
    networks:
      - coa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # Resource limits for memory management
    deploy:
      resources:
        limits:
          memory: 2G  # Limit container to 2GB RAM
        reservations:
          memory: 512M  # Reserve at least 512MB

  # Redis for caching (optional but recommended for Veeva integration)
  redis:
    image: redis:7-alpine
    container_name: coa-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - coa-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: coa-nginx
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ${SSL_CERT_PATH:-./certs}:/etc/nginx/certs:ro
    networks:
      - coa-network
    restart: unless-stopped
    depends_on:
      - coa-backend
    profiles:
      - with-nginx

volumes:
  coa_uploads:
    driver: local
  coa_logs:
    driver: local
  redis_data:
    driver: local

networks:
  coa-network:
    driver: bridge