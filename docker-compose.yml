version: '3.8'

services:
  # COA Backend API
  coa-backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        TARGET: ${TARGET:-prod}  # 默认为 prod，可通过环境变量覆盖
    container_name: coa-backend-api
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      # Application
      APP_NAME: "COA Document Processor API"
      APP_VERSION: "1.0.0"
      DEBUG: "${DEBUG:-False}"
      
      # Server Configuration
      HOST: "0.0.0.0"
      PORT: "8000"
      SSL_ENABLED: "${SSL_ENABLED:-False}"
      
      # Database Configuration
      DB_HOST: "${DB_HOST:-uw2-dataexe-db-d.cijvcub5gps8.us-west-2.rds.amazonaws.com}"
      DB_PORT: "${DB_PORT:-5432}"
      DB_NAME: "${DB_NAME:-gps}"
      DB_USER: "${DB_USER:-gps_dev_owner}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_SCHEMA: "${DB_SCHEMA:-coa_processor}"
      
      # Azure OpenAI Configuration
      AZURE_OPENAI_API_KEY: "${AZURE_OPENAI_API_KEY}"
      AZURE_OPENAI_BASE_URL: "${AZURE_OPENAI_BASE_URL:-https://dsdi-openai-dev.openai.azure.com/}"
      AZURE_OPENAI_API_VERSION: "${AZURE_OPENAI_API_VERSION:-2025-01-01-preview}"
      AZURE_OPENAI_DEPLOYMENT_NAME: "${AZURE_OPENAI_DEPLOYMENT_NAME:-dsdi-gpt-4o}"
      
      # OpenAI (fallback)
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      
      # Security
      SECRET_KEY: "${SECRET_KEY:-your-secret-key-here-change-in-production}"
      ALGORITHM: "HS256"
      ACCESS_TOKEN_EXPIRE_MINUTES: "30"
      
      # CORS Origins
      CORS_ORIGINS: '["https://beone-d.beigenecorp.net", "https://localhost:3000", "https://localhost:8000"]'
      
    volumes:
      # 持久化文件存储
      - coa_uploads:/app/uploads
      - coa_logs:/app/logs
      # 如果需要 SSL 证书
      - ${SSL_CERT_PATH:-./certs}:/app/certs:ro
    networks:
      - coa-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: coa-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - coa-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: coa-nginx
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ${SSL_CERT_PATH:-./certs}:/etc/nginx/certs:ro
    networks:
      - coa-network
    restart: unless-stopped
    depends_on:
      - coa-backend
    profiles:
      - with-nginx  # 使用 --profile with-nginx 启动

volumes:
  coa_uploads:
    driver: local
  coa_logs:
    driver: local
  redis_data:
    driver: local

networks:
  coa-network:
    driver: bridge